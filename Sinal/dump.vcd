$date
	Wed May 10 18:51:33 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$scope module P $end
$var wire 12 ! P1X [11:0] $end
$var wire 12 " P1Y [11:0] $end
$var wire 12 # P2X [11:0] $end
$var wire 12 $ P2Y [11:0] $end
$var wire 12 % P3X [11:0] $end
$var wire 12 & P3Y [11:0] $end
$var wire 12 ' PTX [11:0] $end
$var wire 12 ( PTY [11:0] $end
$var wire 1 ) sin3 $end
$var wire 1 * sin2 $end
$var wire 1 + sin1 $end
$var wire 1 , inTriangle $end
$scope module S1 $end
$var wire 12 - P1X [11:0] $end
$var wire 12 . P1Y [11:0] $end
$var wire 12 / P2X [11:0] $end
$var wire 12 0 P2Y [11:0] $end
$var wire 12 1 PTX [11:0] $end
$var wire 12 2 PTY [11:0] $end
$var wire 1 + sin $end
$var wire 23 3 Sub5 [22:0] $end
$var wire 12 4 Sub4 [11:0] $end
$var wire 12 5 Sub3 [11:0] $end
$var wire 12 6 Sub2 [11:0] $end
$var wire 12 7 Sub1 [11:0] $end
$var wire 23 8 Mult2 [22:0] $end
$var wire 23 9 Mult1 [22:0] $end
$upscope $end
$scope module S2 $end
$var wire 12 : P1X [11:0] $end
$var wire 12 ; P1Y [11:0] $end
$var wire 12 < P2X [11:0] $end
$var wire 12 = P2Y [11:0] $end
$var wire 12 > PTX [11:0] $end
$var wire 12 ? PTY [11:0] $end
$var wire 1 * sin $end
$var wire 23 @ Sub5 [22:0] $end
$var wire 12 A Sub4 [11:0] $end
$var wire 12 B Sub3 [11:0] $end
$var wire 12 C Sub2 [11:0] $end
$var wire 12 D Sub1 [11:0] $end
$var wire 23 E Mult2 [22:0] $end
$var wire 23 F Mult1 [22:0] $end
$upscope $end
$scope module S3 $end
$var wire 12 G P1X [11:0] $end
$var wire 12 H P1Y [11:0] $end
$var wire 12 I P2X [11:0] $end
$var wire 12 J P2Y [11:0] $end
$var wire 12 K PTX [11:0] $end
$var wire 12 L PTY [11:0] $end
$var wire 1 ) sin $end
$var wire 23 M Sub5 [22:0] $end
$var wire 12 N Sub4 [11:0] $end
$var wire 12 O Sub3 [11:0] $end
$var wire 12 P Sub2 [11:0] $end
$var wire 12 Q Sub1 [11:0] $end
$var wire 23 R Mult2 [22:0] $end
$var wire 23 S Mult1 [22:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
x,
x+
x*
x)
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1
b10 "
b10 .
b10 J
b10 !
b10 -
b10 I
#2
b111111111100 6
b110 $
b110 0
b110 ;
b111111111111 5
b11 #
b11 /
b11 :
#3
b100 C
b0 P
b0 O
b10 &
b10 =
b10 H
b10 B
b100 %
b100 <
b100 G
#4
1,
1+
1*
1)
b1001 3
b1100 9
b111111111101 7
b11 8
b111111111101 4
b10 @
b100 F
b1 D
b10 E
b1 A
b0 M
b0 S
b1 Q
b0 R
b1 N
b11 '
b11 (
b11 1
b11 2
b11 >
b11 ?
b11 K
b11 L
#8
0,
0+
b11111111111111111001000 9
b1110 7
b11111111111111111010110 3
b11111111111111111110010 8
b1110 4
b1001000 F
b10010 D
b100100 @
b100100 E
b10010 A
b10010 Q
b10010 N
b10100 '
b10100 (
b10100 1
b10100 2
b10100 >
b10100 ?
b10100 K
b10100 L
#48
